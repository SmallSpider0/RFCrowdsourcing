app:
  # 【日志记录类型】：server、file、console
  logtype: console
  # 【日志文件的路径】：logtype为file时生效
  logpath:
  # 【日志服务器】：用服务器收集各节点的日志（暂未实现）
  logserver: 127.0.0.1:1234
  # 【日志级别】：debug、info、error
  loglevel: info
  # 【IPFS服务url】：本地私有部署IPFS
  ipfs_url: /ip4/116.62.176.206/tcp/5001
  # 【web3服务url】：HTTP接口地址
  web3_url: http://116.62.176.206:18545
  # 【测试账户】测试账户地址和私钥列表
  account_path: "config/bc_keys.json"
  # 【测试服务器】
  server_list_path: "config/server_list.json"
  # 【系统公钥】Requester的公钥路径
  public_key_file: "tmp/keypairs/pk.pkl"
  # 【系统私钥】Requester的私钥路径
  private_key_file: "tmp/keypairs/sk.pkl"
  # 【管理进行端口】
  manager_port_base: 7777

# 实验时用于控制系统的的客户端
client:
  ip: "116.62.176.206"
  # 【服务端口】：用于实验时获取数据的服务端口
  serving_port: 33333
  # 【启动manager使用的命令】
  manager_start_command: "docker run -d --name manager --net=host xzc2034222/rf-crowdsourcing-manager:amd64"
  # 【启动envs使用的命令】
  envs_start_command: "docker run -d --name envs --net=host xzc2034222/rf-crowdsourcing-envs:amd64"

requester:
  # 【任务获取端口】：提供子任务获取的端口
  task_pull_port: 10000
  # 【服务端口】：用于实验时获取数据的服务端口
  serving_port: 20000

randomizer:
  # 【ZKP验证端口】：提供ZKP交互式验证的端口
  proving_server_port_base: 11000
  # 【服务端口】：用于实验时获取数据的服务端口
  serving_port_base: 13000

submitter:
  # 【服务端口】：用于实验时获取数据的服务端口
  serving_port_base: 14000

smart_contract:
  # 【合约地址】：系统中使用的合约地址（本地部署）
  address: "0xBC653A8d353F7D93844e5d94BD99aC93f4Ef588B"
  # 【合约ABI文件位置】：本地硬盘中的位置，以项目根目录为基准
  abi_path: "solidity/CrowdsourcingContract.json"
  # 【监听合约事件的拉取频率】：秒
  poll_interval: 1